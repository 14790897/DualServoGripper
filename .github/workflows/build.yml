name: Build Firmware

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Cache PlatformIO
      uses: actions/cache@v4
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
    
    - name: Create secrets.h from template
      run: |
        cp include/secrets.example include/secrets.h
        echo "Created secrets.h from template for CI build"
    
    - name: Build firmware
      run: pio run
    
    - name: Build filesystem
      run: pio run --target buildfs
    
    - name: List build outputs
      run: |
        echo "=== Build directory structure ==="
        find .pio/build -type f -name "*.bin" -o -name "*.elf" | head -20
        echo "=== Checking for specific files ==="
        ls -la .pio/build/*/ || echo "No build subdirectories found"
    
    - name: Create firmware package
      run: |
        mkdir -p firmware-package
        
        # Copy firmware files
        find .pio/build -name "firmware.bin" -exec cp {} firmware-package/ \; || echo "No firmware.bin found"
        find .pio/build -name "firmware.elf" -exec cp {} firmware-package/ \; || echo "No firmware.elf found"
        
        # Copy filesystem images (LittleFS or SPIFFS)
        find .pio/build -name "littlefs.bin" -exec cp {} firmware-package/ \; || echo "No littlefs.bin found"
        find .pio/build -name "spiffs.bin" -exec cp {} firmware-package/ \; || echo "No spiffs.bin found"
        
        # Also check for filesystem with different names
        find .pio/build -name "*fs*.bin" -exec cp {} firmware-package/ \; || echo "No filesystem binaries found"
        
        echo "=== Final package contents ==="
        ls -la firmware-package/
        
        # Create version info file
        echo "Build Date: $(date)" > firmware-package/build-info.txt
        echo "Commit SHA: ${{ github.sha }}" >> firmware-package/build-info.txt
        echo "Branch: ${{ github.ref_name }}" >> firmware-package/build-info.txt
    
    - name: Upload firmware artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware-${{ github.sha }}
        path: firmware-package/
        retention-days: 30
    
    - name: Upload firmware to release
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: firmware-package/firmware.bin
        asset_name: DualServoGripper-${{ github.event.release.tag_name }}.bin
        asset_content_type: application/octet-stream
